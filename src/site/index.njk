---
title: Barrrgh!
---

{% extends "layouts/_base.njk" %}
<!-- prettier-ignore -->
{% block styles %}
{{ super() }}
<link
  href="https://cdn.jsdelivr.net/npm/tom-select@2.2.2/dist/css/tom-select.css"
  rel="stylesheet"
/>
{% endblock %}
<!-- prettier-ignore -->
{% block body %}
<header class="flex items-center justify-center sm:mt-8">
  <h1 class="text-6xl">Barrrgh!</h1>
</header>
<main class="flex items-center justify-center">
  <div
    class="w-full sm:w-128 sm:flex-initial p-8 border-t border-b sm:border border-gray-300 sm:rounded bg-white"
  >
    <form id="ingredients-form">
      <div class="flex justify-center mb-4">
        <label for="ingredients-select">What do you want in your drink?</label>
      </div>
      <div class="flex justify-center">
        <select
          id="ingredients-select"
          name="ingredients[]"
          autocomplete="off"
          multiple
          placeholder="Add ingredients ..."
          class="block w-full rounded-sm cursor-pointer focus:outline-none"
        >
          {% for ingredient in collections.ingredientsToDrinks | keys%}
          <option value="{{ ingredient }}">
            {{ ingredient | capitalize }}
          </option>
          {% endfor %}
        </select>
      </div>
    </form>
    <ul id="drinks-list" class="mt-4">
      {% for blah in range(0, 5) %}
      <li>
        <a href="/drink/gold-rush" class="block border-b p-4 hover:bg-gray-100">
          <h2>Gold Rush</h2>
          <div class="text-xs text-gray-700">
            <span
              >2 ounces bourbon, ¾ ounce lemon juice, ¾ ounce honey syrup</span
            >
          </div>
        </a>
      </li>
      {% endfor %}
    </ul>
  </div>
</main>
<script src="https://cdn.jsdelivr.net/npm/tom-select@2.2.2/dist/js/tom-select.complete.min.js"></script>
<script id="ingredients-to-drinks-data" type="application/json">
  {{ collections.ingredientsToDrinks | dump | safe }}
</script>
<script id="drink-slugs-to-drinks-data" type="application/json">
  {{ collections.drinkSlugsToDrinks | dump | safe }}
</script>
<script>
  // Load data
  const ingredientsToDrinks = JSON.parse(
    document.getElementById("ingredients-to-drinks-data").textContent
  );
  const drinkSlugsToDrinks = JSON.parse(
    document.getElementById("drink-slugs-to-drinks-data").textContent
  );

  // Manage drinks lists
  const $drinksList = document.getElementById("drinks-list");
  function renderDrinksList(drinkSlugs) {
    const newChildren = [];
    for (const drinkSlug of drinkSlugs) {
      newChildren.push(document.createTextNode(drinkSlug));
    }
    $drinksList.replaceChildren(...newChildren);
  }

  // Utils
  function intersection(setA, setB) {
    const _intersection = new Set();
    for (const elem of setB) {
      if (setA.has(elem)) {
        _intersection.add(elem);
      }
    }
    return _intersection;
  }

  // Search functionality
  function onIngredientsChange(ingredients) {
    if (ingredients.length === 0) {
      renderDrinksList([]);
      return;
    }

    let matchingSlugs = new Set(ingredientsToDrinks[ingredients[0]]);
    for (let i = 1; i < ingredients.length; i++) {
      matchingSlugs = intersection(
        matchingSlugs,
        new Set(ingredientsToDrinks[ingredients[i]])
      );
    }
    renderDrinksList(matchingSlugs);
    return;
  }
  new TomSelect("#ingredients-select", {
    plugins: {
      remove_button: {
        title: "Remove this item",
      },
    },
    onChange: onIngredientsChange,
  });
</script>
{% endblock %}
